# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"html_vid": "00_data.ipynb",
         "html_titled_vid": "00_data.ipynb",
         "html_vids": "00_data.ipynb",
         "get_annots": "07_full_classification.ipynb",
         "get_file_size": "00a_video_compression.ipynb",
         "Path.file_size": "00a_video_compression.ipynb",
         "runnit": "00a_video_compression.ipynb",
         "vid_colour_primaries": "00a_video_compression.ipynb",
         "vid_is_HDR": "00a_video_compression.ipynb",
         "get_mediainfo": "00a_video_compression.ipynb",
         "show_vid_info": "00a_video_compression.ipynb",
         "run_ffmpeg": "00a_video_compression.ipynb",
         "origfake_exist": "00a_video_compression.ipynb",
         "load_dfdc_json": "00a_video_compression.ipynb",
         "get_cvant_split": "00a_video_compression.ipynb",
         "get_cvant_paper": "00a_video_compression.ipynb",
         "compress_vids": "00a_video_compression.ipynb",
         "DetectionPipeline": "02bis_Create_Dataset.ipynb",
         "plt_frames_faces": "01_face_detection.ipynb",
         "plt_frames_faces_vert": "01_face_detection.ipynb",
         "get_first_face": "02_fix_luminosity.ipynb",
         "VideoFaceList": "01_face_detection.ipynb",
         "show_faces": "02bis_Create_Dataset.ipynb",
         "plot_faces": "02bis_Create_Dataset.ipynb",
         "MesoNet": "03_models.ipynb",
         "infer_on_videolist": "08_Validation.ipynb",
         "inference": "04b_inference.ipynb",
         "FocalLoss": "06_Focal_Loss.ipynb",
         "tensor2np": "09_DataAugmentation.ipynb",
         "alb_tfm2fastai": "09_DataAugmentation.ipynb",
         "COLS_BOX": "10_organising_face_detection_results.ipynb",
         "COLS_PROB": "10_organising_face_detection_results.ipynb",
         "COLS_ANT": "10_organising_face_detection_results.ipynb",
         "box2facedf": "10_organising_face_detection_results.ipynb",
         "vid2frames": "10_organising_face_detection_results.ipynb",
         "vid2facedf": "10_organising_face_detection_results.ipynb",
         "filter_by_prob": "10_organising_face_detection_results.ipynb",
         "add_box_area": "10_organising_face_detection_results.ipynb",
         "filter_by_area": "10_organising_face_detection_results.ipynb",
         "add_box_center": "10_organising_face_detection_results.ipynb",
         "sort_boxc": "10_organising_face_detection_results.ipynb",
         "box_procs": "10_organising_face_detection_results.ipynb",
         "process_boxs": "10_organising_face_detection_results.ipynb",
         "hvize_coords": "10_organising_face_detection_results.ipynb",
         "hv_overlay_box": "10_organising_face_detection_results.ipynb",
         "hv_overlay_boxs": "10_organising_face_detection_results.ipynb",
         "hv_boxs_on_frame": "10_organising_face_detection_results.ipynb",
         "frame2face": "10_organising_face_detection_results.ipynb",
         "hv_overlay_faceinfo": "10_organising_face_detection_results.ipynb",
         "hv_face": "10_organising_face_detection_results.ipynb",
         "hv_face_roll": "10_organising_face_detection_results.ipynb",
         "align_frameface": "11_fake_original.ipynb",
         "stack_origfake_facedfs": "11_fake_original.ipynb",
         "origfake_facedf": "11_fake_original.ipynb",
         "annots2facedf": "11_fake_original.ipynb",
         "load_face_annot": "11_fake_original.ipynb",
         "row2faceimgpath": "11_fake_original.ipynb",
         "save_faceimgs": "11_fake_original.ipynb"}

modules = ["data.py",
           "video_compress.py",
           "face_detection.py",
           "nb_02.py",
           "nb_02bis.py",
           "models.py",
           "nb_04a.py",
           "nb_04b.py",
           "nb_06.py",
           "nb_07.py",
           "None.py",
           "nb_08.py",
           "data_aug.py",
           "face_detect.py",
           "df_dataset.py"]

doc_url = "https://qAp.github.io/kgl_deepfake/"

git_url = "https://github.com/qAp/kgl_deepfake/tree/master/"

def custom_doc_links(name): return None

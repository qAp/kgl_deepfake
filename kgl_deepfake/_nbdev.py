# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"html_vid": "00_data.ipynb",
         "html_titled_vid": "00_data.ipynb",
         "html_vids": "00_data.ipynb",
         "get_annots": "07_full_classification.ipynb",
         "get_file_size": "00a_video_compression.ipynb",
         "Path.file_size": "00a_video_compression.ipynb",
         "runnit": "00a_video_compression.ipynb",
         "vid_colour_primaries": "00a_video_compression.ipynb",
         "vid_is_HDR": "00a_video_compression.ipynb",
         "get_mediainfo": "00a_video_compression.ipynb",
         "show_vid_info": "00a_video_compression.ipynb",
         "run_ffmpeg": "00a_video_compression.ipynb",
         "origfake_exist": "00a_video_compression.ipynb",
         "load_dfdc_json": "00a_video_compression.ipynb",
         "get_cvant_split": "00a_video_compression.ipynb",
         "get_cvant_paper": "00a_video_compression.ipynb",
         "compress_vids": "00a_video_compression.ipynb",
         "DetectionPipeline": "02bis_Create_Dataset.ipynb",
         "plt_frames_faces": "01_face_detection.ipynb",
         "plt_frames_faces_vert": "01_face_detection.ipynb",
         "get_first_face": "02_fix_luminosity.ipynb",
         "VideoFaceList": "01_face_detection.ipynb",
         "nms": "14_video_utils.ipynb",
         "BlazeBlock": "15_EasyBlazeFace.ipynb",
         "BlazeFace": "15_EasyBlazeFace.ipynb",
         "intersect": "15_EasyBlazeFace.ipynb",
         "jaccard": "15_EasyBlazeFace.ipynb",
         "overlap_similarity": "15_EasyBlazeFace.ipynb",
         "EasyBlazeFace": "15_EasyBlazeFace.ipynb",
         "show_faces": "02bis_Create_Dataset.ipynb",
         "plot_faces": "02bis_Create_Dataset.ipynb",
         "MesoNet": "03_models.ipynb",
         "infer_on_videolist": "08_Validation.ipynb",
         "inference": "04b_inference.ipynb",
         "FocalLoss": "06_Focal_Loss.ipynb",
         "tensor2np": "09_DataAugmentation.ipynb",
         "alb_tfm2fastai": "09_DataAugmentation.ipynb",
         "downscale": "09_DataAugmentation.ipynb",
         "COLS_BOX": "10_organising_face_detection_results.ipynb",
         "COLS_PROB": "10_organising_face_detection_results.ipynb",
         "COLS_ANT": "10_organising_face_detection_results.ipynb",
         "box2facedf": "10_organising_face_detection_results.ipynb",
         "vid2frames": "10_organising_face_detection_results.ipynb",
         "vid2facedf": "10_organising_face_detection_results.ipynb",
         "filter_by_prob": "10_organising_face_detection_results.ipynb",
         "add_box_area": "10_organising_face_detection_results.ipynb",
         "filter_by_area": "10_organising_face_detection_results.ipynb",
         "add_box_center": "10_organising_face_detection_results.ipynb",
         "sort_boxc": "10_organising_face_detection_results.ipynb",
         "box_procs": "10_organising_face_detection_results.ipynb",
         "process_boxs": "10_organising_face_detection_results.ipynb",
         "hvize_coords": "10_organising_face_detection_results.ipynb",
         "hv_overlay_box": "10_organising_face_detection_results.ipynb",
         "hv_overlay_boxs": "10_organising_face_detection_results.ipynb",
         "hv_boxs_on_frame": "10_organising_face_detection_results.ipynb",
         "frame2face": "10_organising_face_detection_results.ipynb",
         "hv_overlay_faceinfo": "10_organising_face_detection_results.ipynb",
         "hv_face": "10_organising_face_detection_results.ipynb",
         "hv_face_roll": "10_organising_face_detection_results.ipynb",
         "align_frameface": "11_fake_original.ipynb",
         "stack_origfake_facedfs": "11_fake_original.ipynb",
         "origfake_facedf": "11_fake_original.ipynb",
         "annots2facedf": "11_fake_original.ipynb",
         "load_face_annot": "11_fake_original.ipynb",
         "row2faceimgpath": "11_fake_original.ipynb",
         "save_faceimgs": "11_fake_original.ipynb",
         "PriorBox": "12a_pytorch_retinaface.layers.functions.prior_box.ipynb",
         "conv_bn": "12b_pytorch_retinaface.models.net.ipynb",
         "conv_bn_no_relu": "12b_pytorch_retinaface.models.net.ipynb",
         "conv_bn1X1": "12b_pytorch_retinaface.models.net.ipynb",
         "conv_dw": "12b_pytorch_retinaface.models.net.ipynb",
         "SSH": "12b_pytorch_retinaface.models.net.ipynb",
         "FPN": "12b_pytorch_retinaface.models.net.ipynb",
         "MobileNetV1": "12b_pytorch_retinaface.models.net.ipynb",
         "cfg_mnet": "12c_pytorch_retinaface.data.ipynb",
         "cfg_re50": "12c_pytorch_retinaface.data.ipynb",
         "preproc": "12c_pytorch_retinaface.data.ipynb",
         "WiderFaceDetection": "12c_pytorch_retinaface.data.ipynb",
         "detection_collate": "12c_pytorch_retinaface.data.ipynb",
         "ClassHead": "12d_pytorch_retinaface.models.retinaface.ipynb",
         "BboxHead": "12d_pytorch_retinaface.models.retinaface.ipynb",
         "LandmarkHead": "12d_pytorch_retinaface.models.retinaface.ipynb",
         "RetinaFace": "12d_pytorch_retinaface.models.retinaface.ipynb",
         "check_keys": "12e_pytorch_retinaface.test_widerface.ipynb",
         "remove_prefix": "12e_pytorch_retinaface.test_widerface.ipynb",
         "load_model": "12e_pytorch_retinaface.test_widerface.ipynb",
         "point_form": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "center_size": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "matrix_iou": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "matrix_iof": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "match": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "encode": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "encode_landm": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "decode": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "decode_landm": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "log_sum_exp": "12f_pytorch_retinaface.utils.box_utils.ipynb",
         "py_cpu_nms": "12g_pytorch_retinaface.utils.nms.py_cpu_nms.ipynb",
         "Timer": "12h_pytorch_retinaface.utils.timer.ipynb",
         "EasyRetinaFace": "13_EasyRetinaFace.ipynb",
         "read_frame_as_size": "14_video_utils.ipynb",
         "read_frame": "14_video_utils.ipynb",
         "read_all_frames": "14_video_utils.ipynb",
         "read_frames": "14_video_utils.ipynb",
         "read_all_frames_as_square_crops": "14_video_utils.ipynb",
         "get_height_and_width_of_video": "14_video_utils.ipynb",
         "read_random_frames": "14_video_utils.ipynb",
         "read_random_frame": "14_video_utils.ipynb",
         "read_frame_at_frame_number": "14_video_utils.ipynb",
         "read_random_sequential_frames": "14_video_utils.ipynb",
         "plot_detections": "14_video_utils.ipynb",
         "get_video_stats": "14_video_utils.ipynb",
         "load_all_metadata": "14_video_utils.ipynb"}

modules = ["data.py",
           "video_compress.py",
           "face_detection.py",
           "nb_02.py",
           "nb_02bis.py",
           "models.py",
           "nb_04a.py",
           "nb_04b.py",
           "nb_06.py",
           "nb_07.py",
           "nb_08.py",
           "data_aug.py",
           "face_detect.py",
           "df_dataset.py",
           "pytorch_retinaface/layers/functions/prior_box.py",
           "pytorch_retinaface/models/net.py",
           "pytorch_retinaface/data.py",
           "pytorch_retinaface/models/retinaface.py",
           "pytorch_retinaface/test_widerface.py",
           "pytorch_retinaface/utils/box_utils.py",
           "pytorch_retinaface/utils/nms/py_cpu_nms.py",
           "pytorch_retinaface/utils/timer.py",
           "EasyRetinaFace.py",
           "video_utils.py",
           "EasyBlazeFace.py"]

doc_url = "https://qAp.github.io/kgl_deepfake/"

git_url = "https://github.com/qAp/kgl_deepfake/tree/master/"

def custom_doc_links(name): return None
